{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "servicePrincipalAppId": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "ID of your Service Principal. Will be used by the deploy script to create Azure resources on your behalf."
      }
    },
    "servicePrincipalAppKey": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Password of your Service Principal. Will be used by the deploy script to create Azure resources on your behalf."
      }
    },
    "servicePrincipalTenantId": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Tenant ID of your Service Principal. Will be used by the deploy script to create Azure resources on your behalf."
      }
    },
    "binderhubName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Namespace to deploy the BinderHub into on the Kubernetes cluster. This will be used to manage the BinderHub resources. Must also be unique across Azure. Your deployment will be accessible at <app-name>.<resource-group-location>.cloudapp.azure.com"
      }
    },
    "binderhubVersion": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The version of the BinderHub Helm Chart to be deployed. This normally takes the form of versionnumber-hash, ie, 0.2.0-ae57d8. Refer to https://jupyterhub.github.io/helm-chart/#development-releases-binderhub for valid version numbers."
      }
    },
    "aksNodeCount": {
      "type": "int",
      "minValue": 1,
      "defaultValue": 3,
      "metadata": {
        "description": "The initial number of nodes to create in the AKS cluster."
      }
    },
    "aksNodeVmSize": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "The default VM size to use for the AKS cluster."
      }
    },
    "contactEmail": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "An email address at which you can be reached. This will be used by Let's Encrypt to manage your TLS certificates."
      }
    },
    "dockerUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The name of a valid DockerHub user account."
      }
    },
    "dockerPassword": {
      "type": "securestring",
      "minLength": 8,
      "metadata": {
        "description": "The user password for DockerHub"
      }
    },
    "dockerPrefix": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Prefix to use for docker containers created by the BinderHub"
      }
    },
    "dockerOrganisation": {
      "type": "string",
      "defaultValue": "null",
      "metadata": {
        "description": "Organisation to use for Dockerhub; this is an optional value. Docker Username must be a member of this organisation if used."
      }
    },
    "setupDockerImage": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "sgibson91/binderhub-setup:v1",
      "metadata": {
        "description": "Docker image to use for the BinderHub deployment. Must be publicly accessible."
      }
    }
  },
  "resources": [
    {
      "name": "[concat(parameters('binderHubName'), 'setup')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-10-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {
        "osType": "Linux",
        "restartPolicy": "Never",
        "containers": [
          {
            "name": "binderhub-setup",
            "properties": {
              "image": "[parameters('setupDockerImage')]",
              "environmentVariables": [
                {
                  "name": "BINDERHUB_CONTAINER_MODE",
                  "value": "true"
                },
                {
                  "name": "SP_APP_ID",
                  "value": "[parameters('servicePrincipalAppId')]"
                },
                {
                  "name": "SP_APP_KEY",
                  "value": "[parameters('servicePrincipalAppKey')]"
                },
                {
                  "name": "SP_TENANT_ID",
                  "value": "[parameters('servicePrincipalTenantId')]"
                },
                {
                  "name": "RESOURCE_GROUP_LOCATION",
                  "value": "[resourceGroup().location]"
                },
                {
                  "name": "RESOURCE_GROUP_NAME",
                  "value": "[resourceGroup().name]"
                },
                {
                  "name": "AZURE_SUBSCRIPTION",
                  "value": "[subscription().id]"
                },
                {
                  "name": "BINDERHUB_NAME",
                  "value": "[parameters('binderHubName')]"
                },
                {
                  "name": "BINDERHUB_VERSION",
                  "value": "[parameters('binderHubVersion')]"
                },
                {
                  "name": "AKS_NODE_COUNT",
                  "value": "[parameters('aksNodeCount')]"
                },
                {
                  "name": "AKS_NODE_VM_SIZE",
                  "value": "[parameters('aksNodeVmSize')]"
                },
                {
                  "name": "CONTACT_EMAIL",
                  "value": "[parameters('contactEmail')]"
                },
                {
                  "name": "DOCKER_USERNAME",
                  "value": "[parameters('dockerUsername')]"
                },
                {
                  "name": "DOCKER_PASSWORD",
                  "value": "[parameters('dockerPassword')]"
                },
                {
                  "name": "DOCKER_IMAGE_PREFIX",
                  "value": "[parameters('dockerPrefix')]"
                },
                {
                  "name": "DOCKER_ORGANISATION",
                  "value": "[parameters('dockerOrganisation')]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1.5
                }
              }
            }
          }
        ]
      }
    }
  ]
}
